// Code generated by scripts/generate.js; DO NOT EDIT.

// Copyright 2022 Harness, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package yaml

import (
	"encoding/json"
)

type Delegate struct {
	Filter  []string
	Inherit bool
}

// UnmarshalJSON implement the json.Unmarshaler interface.
func (v *Delegate) UnmarshalJSON(data []byte) error {
	var out Stringorslice

	if err := json.Unmarshal(data, &out); err != nil {
		return err
	}

	if len(out) == 1 && out[0] == "inherit-from-infrastructure" {
		v.Inherit = true
	} else {
		v.Filter = out
	}

	return nil
}

// MarshalJSON implement the json.Marshaler interface.
func (v *Delegate) MarshalJSON() ([]byte, error) {
	switch {
	case v.Inherit:
		return json.Marshal("inherit-from-infrastructure")
	default:
		return json.Marshal(v.Filter)
	}
}

// MarshalYAML implement the yaml.Marshaler interface.
func (v *Delegate) MarshalYAML() (interface{}, error) {
	switch {
	case v.Inherit:
		return "inherit-from-infrastructure", nil
	default:
		return v.Filter, nil
	}
}
